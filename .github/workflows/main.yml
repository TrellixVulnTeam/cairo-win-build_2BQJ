name: Build Cairo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Build Cairo
        run: python build-cairo.py --prefix="./prefix-cairo" --build-cairo --no-build-pkgconf
      - name: Build pkgconf
        run: python build-cairo.py --prefix="./prefix-pkgconf" --build-pkgconf --no-build-cairo
      - uses: actions/upload-artifact@v3
        with:
          name: cairo-build
          path: prefix-cairo/
      - uses: actions/upload-artifact@v3
        with:
          name: pkgconf-build
          path: prefix-pkgconf/


  release:
    runs-on: windows-latest
    needs: [build]
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: cairo-build
          path: cairo/
      - uses: actions/download-artifact@v3
        with:
          name: pkgconf-build
          path: pkgconf/
      - run: pip install requests
      - name: Get Upload URL
        id: create_release
        shell: python
        env:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          tag_act: ${{ github.ref }}
          REPO_NAME: ${{ github.repository }}
        run: |
          import requests
          import os
          ref_tag = os.getenv('tag_act').split('/')[-1]
          repo_name = os.getenv('REPO_NAME', 'naveen521kk/cairo-win-build')
          access_token = os.getenv('access_token')
          headers = {
              "Accept":"application/vnd.github.v3+json",
              "Authorization": f"token {access_token}"
          }
          url = f"https://api.github.com/repos/{repo_name}/releases/tags/{ref_tag}"
          c = requests.get(url, headers=headers)
          upload_url=c.json()['upload_url']
          print(f"::set-output name=upload_url::{upload_url}")
          print(f"::set-output name=tag_name::{ref_tag}")
          print(f"::set-output name=file_name_cairo::cairo-{ref_tag}.zip")

      - name: Zip it
        shell: bash
        env:
          filename_cairo: ${{ steps.create_release.outputs.file_name_cairo }}
        run: |
          7z a $filename_cairo cairo/
          7z a pkgconf.zip pkgconf/

      - name: Upload Release Asset
        id: upload-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create_release.outputs.file_name_cairo }}
          asset_name: ${{ steps.create_release.outputs.file_name_cairo }}
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pkgconf.zip
          asset_name: pkgconf.zip
          asset_content_type: application/zip
